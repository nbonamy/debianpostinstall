server {

	listen				80;
	server_name		test.scorecast.fr;
	root					/var/www/scorecast;

	# Web-service
	location /ws {
		rewrite /ws/(.*)/(.*).php/(.*)/(.*)		/ws/$1/$2.php?arg1=$3&arg2=$4 last;
		rewrite /ws/(.*)/(.*)/(.*)/(.*)				/ws/$1/$2.php?arg1=$3&arg2=$4 last;
		rewrite /ws/(.*)/(.*).php/(.*)				/ws/$1/$2.php?arg=$3 last;
		rewrite /ws/(.*)/(.*)/(.*)						/ws/$1/$2.php?arg=$3 last;
		rewrite /ws/(.*)/(.*).php							/ws/$1/$2.php last;
		rewrite /ws/(.*)/(.*)									/ws/$1/$2.php last;
	}

	# Static
	location / {
		index  index.html index.htm index.php;
	}

	# PHP scripts -> PHP-FPM server listening on 127.0.0.1:9000
	location ~ \.php$ {
 		# The following line prevents malicious php code to be executed through some uploaded file (without php extension, like image)
		# This fix shoudn't work though, if nginx and php are not on the same server, other options exist
		# (like unauthorizing php execution within upload folder)
		# More on this serious security concern in the "Pass Non-PHP Requests to PHP" section, there http://wiki.nginx.org/Pitfalls
		try_files				$uri = 404;

		fastcgi_pass		unix:/var/run/php5-fpm.sock;
		fastcgi_index		index.php;
		include					fastcgi_params;
		fastcgi_param		SCRIPT_FILENAME $document_root$fastcgi_script_name;
	}

	# Security
	location ~ /\.ht {
		deny	all;
	}

	# Stuffs
	location = /favicon.ico {
		access_log	off;
	}

	location ~* ^.+\.(jpg|jpeg|gif|css|png|js|xml)$ {
		expires					30d;
		#access_log			off;
	}
}
